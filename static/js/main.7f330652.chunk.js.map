{"version":3,"sources":["refine.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Refine","state","difficulty","category","minDate","maxDate","input","change","e","setState","target","name","value","onSubmit","preventDefault","props","onClear","onSearch","style","display","type","this","onChange","onClick","align","margin","placeholder","React","Component","App","fields","searchVal","searchCat","url","data","o","fetch","then","res","json","isLoaded","concat","key","s","i","length","JSON","stringify","includes","push","searched","c","className","textAlign","paddingTop","columns","Header","accessor","width","defaultPageSize","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.7f330652.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.js\";\nimport \"./page.css\";\nimport DatePicker from \"react-datepicker\";\n\nexport default class Refine extends React.Component {\n\tstate = {\n\t\tdifficulty: \"\",\n\t\tcategory: \"\",\n\t\tminDate: \"\",\n\t\tmaxDate: \"\",\n\t\tinput: \"\"\n\t}\n\n\t//automatically updates state values as input changes in real time in each field\n\tchange = e => {\n\t\tthis.setState({[e.target.name]: e.target.value});\n\t};\n\n\t//calls App.js onSubmit method to handle submit button click\n\tonSubmit = e => {\n\t\te.preventDefault();\n\t\tthis.props.onSubmit(this.state);\n\t}\n\t\n\t//calls App.js onClear method to handle clear button click\n\tonClear = e => {\n\t\tthis.props.onClear();\n\t\tthis.setState({\n\t\t\tdifficulty: \"\",\n\t\t\tcategory: \"\",\n\t\t\tminDate: \"\",\n\t\t\tmaxDate: \"\",\n\t\t\tinput: \"\"\n\t\t});\n\t}\n\n\t//calls App.js onSearch method to handle search button click\n\tonSearch = e => {\n         e.preventDefault();\n         this.props.onSearch(this.state);\n     }\t\n\n\t//format form appearance\n\trender() {\n\t\treturn (\n\t\t  <div style={{ display: \"inline-block\"  }}>\n\t\t\tSearch:\n\t\t\t <input type=\"text\" name=\"input\" value={this.state.input} onChange={e => this.change(e)}/>\n             <button onClick={e => this.onSearch(e)}>Search</button>\n\t\t\t<h3>Refine by:</h3>\n\t\t\t<form align=\"center\">\n\t\t\t\t<div style={{ display: \"inline-block\", margin: \"15px\" }}>\n\t\t\t\t\tValue:\n\t\t\t\t\t<input type=\"text\" name=\"difficulty\" value={this.state.difficulty} onChange={e => this.change(e)}/>\n\t\t\t\t</div>\n\t\t\t\t<div style={{ display: \"inline-block\", margin: \"15px\" }}>\n\t\t\t\t\tCategory ID:\n\t\t\t\t\t<input type=\"text\" name=\"category\" value={this.state.category} onChange={e => this.change(e)}/>\n\t\t\t\t</div>\n\t\t\t\t<div style={{ display: \"inline-block\", margin: \"15px\" }}>\n\t\t\t\t\tStart Date:\n\t\t\t\t\t<input type=\"text\" name=\"minDate\" placeholder=\"YYYY-MM-DD\" value={this.state.minDate} onChange={e => this.change(e)}/>\n\t\t\t\t</div>\n\t\t\t\t<div style={{ display: \"inline-block\", margin: \"15px\" }}>\n\t\t\t\t\tEnd Date:\n\t\t\t\t\t<input type=\"text\" name=\"maxDate\" placeholder=\"YYYY-MM-DD\" value={this.state.maxDate} onChange={e => this.change(e)}/>\n\t\t\t\t</div>\t       \t\n\t\t\t</form>\n\t\t\t<br />\n\t\t\t\t<button onClick={e => this.onSubmit(e)}>Submit</button>\n\t\t\t<br/>\n\t\t\t<h4>Click \"clear\" to clear search and refinements</h4>\n\t\t\t<button onClick={() => this.onClear()}>Clear</button>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport './page.css';\nimport Refine from './refine.js';\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\n\nclass App extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tfields: {},\n\t\t\tdata: [],\n\t\t\tsearched: false,\n\t\t\tisLoaded: false,\n\t\t}\n\t}\n\n\t//loads in clues by fetching from api with offset factor of 100\n\tcomponentDidMount() {\n\t\tlet base = \"https://cors-anywhere.herokuapp.com/http://jservice.io/api/clues?offset=\";\n//\t\tlet base = \"http://jservice.io/api/clues?offset=\";\n\t\tlet items = [];\n\t\tfor (var c = 0; c < 500; c += 100) {\n\t\t\tfetch(base+c)\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then(json => {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tdata: this.state.data.concat(json),\n\t\t\t\t\t\tisLoaded: true\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t}\n\t}\n\n\t//handles submit button function and checks to see if search parameters match with items existing in data table\n\t//sets data array to empty first, then traverses through api using provided parameters in form fields\n\t//adds elements to data array and updates the table \n\t//checks through data fields after fetching api to re-configure search limitations\n\tonSubmit = fields => {\n\t\tthis.setState({ fields });\n\t\tif (fields.difficulty !== \"\" || fields.category !== \"\" || fields.minDate !== \"\" || fields.maxDate !== \"\"){\n\t\t\tlet base = \"https://cors-anywhere.herokuapp.com/http://jservice.io/api/clues?\";\n\t\t\tlet searchVal = \"value=\";\n\t\t\tlet searchCat = \"&category=\";\n\t\t\tlet minDate = \"&min_date=\";\n\t\t\tlet maxDate = \"&max_date=\";\n\t\t\tlet offset = \"&offset=\";\n\t\t\tlet questions = []\n\t\t\tif (fields.difficulty !== \"\") {\n\t\t\t\tsearchVal += fields.difficulty;\n\t\t\t}\n\t\t\tif (fields.category !== \"\") {\n\t\t\t\tsearchCat += fields.category;\n\t\t\t}\n\t\t\tif (fields.minDate !== \"\") {\n\t\t\t\tminDate += fields.minDate;\n\t\t\t}\n\t\t\tif (fields.maxDate !== \"\") {\n\t\t\t\tmaxDate += fields.maxDate;\n\t\t\t}\n\t\t\tlet url = base + searchVal + searchCat + minDate + maxDate + offset;\n\t\t\tif (fields.difficulty !== \"\" || fields.category !== \"\" || fields.minDate !== \"\" || fields.maxDate !== \"\")\n\t\t\t\t\tthis.setState({ data: [] });\n\t\t\tfor (var o = 0; o < 500; o += 100) {\n\t\t\t\tfetch(url+o)\n\t\t\t\t.then(res => res.json())\n\t\t\t\t\t.then(json => {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tisLoaded: true,\n\t\t\t\t\t\tdata: this.state.data.concat(json)\n\t\t\t\t\t}, () => {\n\t\t\t\t\t\tthis.onSearch(fields);\n\t\t\t\t\t})\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\t//filters items in data array to items containing search input\n\tonSearch = fields => {\n\t\tthis.setState({ fields });\n\t\tlet key = fields.input;\n\t\tlet s = [];\n\t\tfor (var i = 0; i < this.state.data.length; i++) {\n\t\t\tlet question = JSON.stringify(this.state.data[i]);\n\t\t\tif (question.includes(key))\n\t\t\t\ts.push(this.state.data[i]);\n\t\t}\n\t\tthis.setState({ searched: true, data: s });\n\t}\n\n\t//clears search and refine limitations\n\tonClear = () => {\n\t\tthis.setState({\n\t\t\tdata: []\n\t\t})\n\t\tlet base = \"https://cors-anywhere.herokuapp.com/http://jservice.io/api/clues?offset=\";\n\t\tfor (var o = 0; o < 500; o += 100) {\n\t\t\tfetch(base+o)\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then(json => {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tdata: this.state.data.concat(json),\n\t\t\t\t\t\tisLoaded: true\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t}\n\n\n\t}\n\n\trender() {\n\t\tvar { isLoaded, data } = this.state;\n\t\tif (!isLoaded) {\n\t\t\treturn <div>Loading...</div>;\n\t\t}\n\n\t\telse {\n\t\t\treturn (\n    \t\t\t<div className=\"App\">\n\t\t\t\t<h1>Jeopardy Question Bank</h1>\n\t\t\t\t<div style={{ textAlign: \"center\", display: \"block\"  }}>\n\t\t  \t\t\t<Refine onSearch={fields => this.onSearch(fields)} onSubmit={fields => this.onSubmit(fields)} onClear={() => this.onClear()}/>\n\t\t\t\t</div>\n\t\t\t\t<div style={{ paddingTop: \"50px\" }}>\n\t\t\t\t\t<ReactTable\n\t\t\t\t\t\tdata={data}\n\t\t\t\t\t\tcolumns={[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tHeader: \"Category ID\",\n\t\t\t\t\t\t\taccessor: \"category_id\",\n\t\t\t\t\t\t\twidth: 130\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tHeader: \"Category\",\n\t\t\t\t\t\t\taccessor: \"category.title\",\n\t\t\t\t\t\t\twidth: 180\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tHeader: \"Question\",\n\t\t\t\t\t\t\taccessor: \"question\",\n\t\t\t\t\t\t\twidth: 700\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tHeader: \"Answer\",\n\t\t\t\t\t\t\taccessor: \"answer\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tHeader: \"Air Date\",\n\t\t\t\t\t\t\taccessor: \"airdate\",\n\t\t\t\t\t\t\twidth: 100\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tHeader: \"Value\",\n\t\t\t\t\t\t\taccessor: \"value\",\n\t\t\t\t\t\t\twidth: 80\n\t\t\t\t\t\t}\n\t\t\t\t\t]}\n\t\t\t\t\tdefaultPageSize={50}\n\t\t\t\t\tclassName=\"-striped -highlight\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n    \t\t</div>\n  \t\t\t);\n \t }\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";"],"sourceRoot":""}